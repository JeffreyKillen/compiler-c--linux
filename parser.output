State 10 conflicts: 1 reduce/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body
    2         | error ';'

    3 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'

    4 optional_variable: variable optional_variable
    5                  | variable
    6                  | %empty

    7 parameters: parameter ',' parameters
    8           | parameter
    9           | %empty

   10 parameter: IDENTIFIER ':' type

   11 variable: IDENTIFIER ':' type IS statement_

   12 type: INTEGER
   13     | BOOLEAN
   14     | REAL

   15 body: BEGIN_ statement_ END ';'

   16 statement_: statement ';'
   17           | error ';'

   18 statement: expression
   19          | REDUCE operator reductions ENDREDUCE
   20          | IF expression THEN statement_ ELSE statement_ ENDIF
   21          | CASE expression IS cases OTHERS ARROW statement_ ENDCASE

   22 cases: case cases
   23      | %empty

   24 case: WHEN INT_LITERAL ARROW statement_
   25     | error ';'

   26 operator: ADDOP
   27         | MULOP

   28 reductions: reductions statement_
   29           | %empty

   30 expression: expression OROP andexp
   31           | andexp

   32 andexp: andexp ANDOP notexp
   33       | notexp

   34 notexp: NOTOP notexp
   35       | relation

   36 relation: relation RELOP term
   37         | term

   38 term: term ADDOP factor
   39     | factor

   40 factor: factor MULOP exp
   41       | factor REMOP exp
   42       | exp

   43 exp: primary EXPOP exp
   44    | primary

   45 primary: '(' expression ')'
   46        | INT_LITERAL
   47        | REAL_LITERAL
   48        | BOOL_LITERAL
   49        | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 45
')' (41) 45
',' (44) 7
':' (58) 10 11
';' (59) 2 3 15 16 17 25
error (256) 2 17 25
IDENTIFIER (258) 3 10 11 49
INT_LITERAL (259) 24 46
BOOL_LITERAL (260) 48
REAL_LITERAL (261) 47
ADDOP (262) 26 38
MULOP (263) 27 40
RELOP (264) 36
ANDOP (265) 32
BEGIN_ (266) 15
BOOLEAN (267) 13
END (268) 15
ENDREDUCE (269) 19
FUNCTION (270) 3
INTEGER (271) 12
IS (272) 11 21
REDUCE (273) 19
RETURNS (274) 3
REMOP (275) 41
EXPOP (276) 43
ARROW (277) 21 24
CASE (278) 21
ELSE (279) 20
ENDCASE (280) 21
ENDIF (281) 20
IF (282) 20
OTHERS (283) 21
REAL (284) 14
THEN (285) 20
WHEN (286) 24
OROP (287) 30
NOTOP (288) 34


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
function (40)
    on left: 1 2, on right: 0
function_header (41)
    on left: 3, on right: 1
optional_variable (42)
    on left: 4 5 6, on right: 1 4
parameters (43)
    on left: 7 8 9, on right: 3 7
parameter (44)
    on left: 10, on right: 7 8
variable (45)
    on left: 11, on right: 4 5
type (46)
    on left: 12 13 14, on right: 3 10 11
body (47)
    on left: 15, on right: 1
statement_ (48)
    on left: 16 17, on right: 11 15 20 21 24 28
statement (49)
    on left: 18 19 20 21, on right: 16
cases (50)
    on left: 22 23, on right: 21 22
case (51)
    on left: 24 25, on right: 22
operator (52)
    on left: 26 27, on right: 19
reductions (53)
    on left: 28 29, on right: 19 28
expression (54)
    on left: 30 31, on right: 18 20 21 30 45
andexp (55)
    on left: 32 33, on right: 30 31 32
notexp (56)
    on left: 34 35, on right: 32 33 34
relation (57)
    on left: 36 37, on right: 35 36
term (58)
    on left: 38 39, on right: 36 37 38
factor (59)
    on left: 40 41 42, on right: 38 39 40 41
exp (60)
    on left: 43 44, on right: 40 41 42 43
primary (61)
    on left: 45 46 47 48 49, on right: 43 44


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    2 function: error . ';'

    ';'  shift, and go to state 5


State 2

    3 function_header: FUNCTION . IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function . $end

    $end  shift, and go to state 7


State 4

    1 function: function_header . optional_variable body

    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 6 (optional_variable)

    optional_variable  go to state 9
    variable           go to state 10


State 5

    2 function: error ';' .

    $default  reduce using rule 2 (function)


State 6

    3 function_header: FUNCTION IDENTIFIER . parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 9 (parameters)

    parameters  go to state 12
    parameter   go to state 13


State 7

    0 $accept: function $end .

    $default  accept


State 8

   11 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 14


State 9

    1 function: function_header optional_variable . body

    BEGIN_  shift, and go to state 15

    body  go to state 16


State 10

    4 optional_variable: variable . optional_variable
    5                  | variable .

    IDENTIFIER  shift, and go to state 8

    BEGIN_    reduce using rule 5 (optional_variable)
    BEGIN_    [reduce using rule 6 (optional_variable)]
    $default  reduce using rule 5 (optional_variable)

    optional_variable  go to state 17
    variable           go to state 10


State 11

   10 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 18


State 12

    3 function_header: FUNCTION IDENTIFIER parameters . RETURNS type ';'

    RETURNS  shift, and go to state 19


State 13

    7 parameters: parameter . ',' parameters
    8           | parameter .

    ','  shift, and go to state 20

    $default  reduce using rule 8 (parameters)


State 14

   11 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 21
    INTEGER  shift, and go to state 22
    REAL     shift, and go to state 23

    type  go to state 24


State 15

   15 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    REDUCE        shift, and go to state 30
    CASE          shift, and go to state 31
    IF            shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 34

    statement_  go to state 35
    statement   go to state 36
    expression  go to state 37
    andexp      go to state 38
    notexp      go to state 39
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    exp         go to state 43
    primary     go to state 44


State 16

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 17

    4 optional_variable: variable optional_variable .

    $default  reduce using rule 4 (optional_variable)


State 18

   10 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 21
    INTEGER  shift, and go to state 22
    REAL     shift, and go to state 23

    type  go to state 45


State 19

    3 function_header: FUNCTION IDENTIFIER parameters RETURNS . type ';'

    BOOLEAN  shift, and go to state 21
    INTEGER  shift, and go to state 22
    REAL     shift, and go to state 23

    type  go to state 46


State 20

    7 parameters: parameter ',' . parameters

    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 9 (parameters)

    parameters  go to state 47
    parameter   go to state 13


State 21

   13 type: BOOLEAN .

    $default  reduce using rule 13 (type)


State 22

   12 type: INTEGER .

    $default  reduce using rule 12 (type)


State 23

   14 type: REAL .

    $default  reduce using rule 14 (type)


State 24

   11 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 48


State 25

   17 statement_: error . ';'

    ';'  shift, and go to state 49


State 26

   49 primary: IDENTIFIER .

    $default  reduce using rule 49 (primary)


State 27

   46 primary: INT_LITERAL .

    $default  reduce using rule 46 (primary)


State 28

   48 primary: BOOL_LITERAL .

    $default  reduce using rule 48 (primary)


State 29

   47 primary: REAL_LITERAL .

    $default  reduce using rule 47 (primary)


State 30

   19 statement: REDUCE . operator reductions ENDREDUCE

    ADDOP  shift, and go to state 50
    MULOP  shift, and go to state 51

    operator  go to state 52


State 31

   21 statement: CASE . expression IS cases OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 34

    expression  go to state 53
    andexp      go to state 38
    notexp      go to state 39
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    exp         go to state 43
    primary     go to state 44


State 32

   20 statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 34

    expression  go to state 54
    andexp      go to state 38
    notexp      go to state 39
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    exp         go to state 43
    primary     go to state 44


State 33

   34 notexp: NOTOP . notexp

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 34

    notexp    go to state 55
    relation  go to state 40
    term      go to state 41
    factor    go to state 42
    exp       go to state 43
    primary   go to state 44


State 34

   45 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 34

    expression  go to state 56
    andexp      go to state 38
    notexp      go to state 39
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    exp         go to state 43
    primary     go to state 44


State 35

   15 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 57


State 36

   16 statement_: statement . ';'

    ';'  shift, and go to state 58


State 37

   18 statement: expression .
   30 expression: expression . OROP andexp

    OROP  shift, and go to state 59

    $default  reduce using rule 18 (statement)


State 38

   31 expression: andexp .
   32 andexp: andexp . ANDOP notexp

    ANDOP  shift, and go to state 60

    $default  reduce using rule 31 (expression)


State 39

   33 andexp: notexp .

    $default  reduce using rule 33 (andexp)


State 40

   35 notexp: relation .
   36 relation: relation . RELOP term

    RELOP  shift, and go to state 61

    $default  reduce using rule 35 (notexp)


State 41

   37 relation: term .
   38 term: term . ADDOP factor

    ADDOP  shift, and go to state 62

    $default  reduce using rule 37 (relation)


State 42

   39 term: factor .
   40 factor: factor . MULOP exp
   41       | factor . REMOP exp

    MULOP  shift, and go to state 63
    REMOP  shift, and go to state 64

    $default  reduce using rule 39 (term)


State 43

   42 factor: exp .

    $default  reduce using rule 42 (factor)


State 44

   43 exp: primary . EXPOP exp
   44    | primary .

    EXPOP  shift, and go to state 65

    $default  reduce using rule 44 (exp)


State 45

   10 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 10 (parameter)


State 46

    3 function_header: FUNCTION IDENTIFIER parameters RETURNS type . ';'

    ';'  shift, and go to state 66


State 47

    7 parameters: parameter ',' parameters .

    $default  reduce using rule 7 (parameters)


State 48

   11 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    REDUCE        shift, and go to state 30
    CASE          shift, and go to state 31
    IF            shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 34

    statement_  go to state 67
    statement   go to state 36
    expression  go to state 37
    andexp      go to state 38
    notexp      go to state 39
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    exp         go to state 43
    primary     go to state 44


State 49

   17 statement_: error ';' .

    $default  reduce using rule 17 (statement_)


State 50

   26 operator: ADDOP .

    $default  reduce using rule 26 (operator)


State 51

   27 operator: MULOP .

    $default  reduce using rule 27 (operator)


State 52

   19 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 29 (reductions)

    reductions  go to state 68


State 53

   21 statement: CASE expression . IS cases OTHERS ARROW statement_ ENDCASE
   30 expression: expression . OROP andexp

    IS    shift, and go to state 69
    OROP  shift, and go to state 59


State 54

   20 statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   30 expression: expression . OROP andexp

    THEN  shift, and go to state 70
    OROP  shift, and go to state 59


State 55

   34 notexp: NOTOP notexp .

    $default  reduce using rule 34 (notexp)


State 56

   30 expression: expression . OROP andexp
   45 primary: '(' expression . ')'

    OROP  shift, and go to state 59
    ')'   shift, and go to state 71


State 57

   15 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 72


State 58

   16 statement_: statement ';' .

    $default  reduce using rule 16 (statement_)


State 59

   30 expression: expression OROP . andexp

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 34

    andexp    go to state 73
    notexp    go to state 39
    relation  go to state 40
    term      go to state 41
    factor    go to state 42
    exp       go to state 43
    primary   go to state 44


State 60

   32 andexp: andexp ANDOP . notexp

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 34

    notexp    go to state 74
    relation  go to state 40
    term      go to state 41
    factor    go to state 42
    exp       go to state 43
    primary   go to state 44


State 61

   36 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    '('           shift, and go to state 34

    term     go to state 75
    factor   go to state 42
    exp      go to state 43
    primary  go to state 44


State 62

   38 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    '('           shift, and go to state 34

    factor   go to state 76
    exp      go to state 43
    primary  go to state 44


State 63

   40 factor: factor MULOP . exp

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    '('           shift, and go to state 34

    exp      go to state 77
    primary  go to state 44


State 64

   41 factor: factor REMOP . exp

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    '('           shift, and go to state 34

    exp      go to state 78
    primary  go to state 44


State 65

   43 exp: primary EXPOP . exp

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    '('           shift, and go to state 34

    exp      go to state 79
    primary  go to state 44


State 66

    3 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' .

    $default  reduce using rule 3 (function_header)


State 67

   11 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 11 (variable)


State 68

   19 statement: REDUCE operator reductions . ENDREDUCE
   28 reductions: reductions . statement_

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    ENDREDUCE     shift, and go to state 80
    REDUCE        shift, and go to state 30
    CASE          shift, and go to state 31
    IF            shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 34

    statement_  go to state 81
    statement   go to state 36
    expression  go to state 37
    andexp      go to state 38
    notexp      go to state 39
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    exp         go to state 43
    primary     go to state 44


State 69

   21 statement: CASE expression IS . cases OTHERS ARROW statement_ ENDCASE

    error  shift, and go to state 82
    WHEN   shift, and go to state 83

    OTHERS  reduce using rule 23 (cases)

    cases  go to state 84
    case   go to state 85


State 70

   20 statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    REDUCE        shift, and go to state 30
    CASE          shift, and go to state 31
    IF            shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 34

    statement_  go to state 86
    statement   go to state 36
    expression  go to state 37
    andexp      go to state 38
    notexp      go to state 39
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    exp         go to state 43
    primary     go to state 44


State 71

   45 primary: '(' expression ')' .

    $default  reduce using rule 45 (primary)


State 72

   15 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 15 (body)


State 73

   30 expression: expression OROP andexp .
   32 andexp: andexp . ANDOP notexp

    ANDOP  shift, and go to state 60

    $default  reduce using rule 30 (expression)


State 74

   32 andexp: andexp ANDOP notexp .

    $default  reduce using rule 32 (andexp)


State 75

   36 relation: relation RELOP term .
   38 term: term . ADDOP factor

    ADDOP  shift, and go to state 62

    $default  reduce using rule 36 (relation)


State 76

   38 term: term ADDOP factor .
   40 factor: factor . MULOP exp
   41       | factor . REMOP exp

    MULOP  shift, and go to state 63
    REMOP  shift, and go to state 64

    $default  reduce using rule 38 (term)


State 77

   40 factor: factor MULOP exp .

    $default  reduce using rule 40 (factor)


State 78

   41 factor: factor REMOP exp .

    $default  reduce using rule 41 (factor)


State 79

   43 exp: primary EXPOP exp .

    $default  reduce using rule 43 (exp)


State 80

   19 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 19 (statement)


State 81

   28 reductions: reductions statement_ .

    $default  reduce using rule 28 (reductions)


State 82

   25 case: error . ';'

    ';'  shift, and go to state 87


State 83

   24 case: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 88


State 84

   21 statement: CASE expression IS cases . OTHERS ARROW statement_ ENDCASE

    OTHERS  shift, and go to state 89


State 85

   22 cases: case . cases

    error  shift, and go to state 82
    WHEN   shift, and go to state 83

    OTHERS  reduce using rule 23 (cases)

    cases  go to state 90
    case   go to state 85


State 86

   20 statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 91


State 87

   25 case: error ';' .

    $default  reduce using rule 25 (case)


State 88

   24 case: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 92


State 89

   21 statement: CASE expression IS cases OTHERS . ARROW statement_ ENDCASE

    ARROW  shift, and go to state 93


State 90

   22 cases: case cases .

    $default  reduce using rule 22 (cases)


State 91

   20 statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    REDUCE        shift, and go to state 30
    CASE          shift, and go to state 31
    IF            shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 34

    statement_  go to state 94
    statement   go to state 36
    expression  go to state 37
    andexp      go to state 38
    notexp      go to state 39
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    exp         go to state 43
    primary     go to state 44


State 92

   24 case: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    REDUCE        shift, and go to state 30
    CASE          shift, and go to state 31
    IF            shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 34

    statement_  go to state 95
    statement   go to state 36
    expression  go to state 37
    andexp      go to state 38
    notexp      go to state 39
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    exp         go to state 43
    primary     go to state 44


State 93

   21 statement: CASE expression IS cases OTHERS ARROW . statement_ ENDCASE

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    BOOL_LITERAL  shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    REDUCE        shift, and go to state 30
    CASE          shift, and go to state 31
    IF            shift, and go to state 32
    NOTOP         shift, and go to state 33
    '('           shift, and go to state 34

    statement_  go to state 96
    statement   go to state 36
    expression  go to state 37
    andexp      go to state 38
    notexp      go to state 39
    relation    go to state 40
    term        go to state 41
    factor      go to state 42
    exp         go to state 43
    primary     go to state 44


State 94

   20 statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 97


State 95

   24 case: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 24 (case)


State 96

   21 statement: CASE expression IS cases OTHERS ARROW statement_ . ENDCASE

    ENDCASE  shift, and go to state 98


State 97

   20 statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 20 (statement)


State 98

   21 statement: CASE expression IS cases OTHERS ARROW statement_ ENDCASE .

    $default  reduce using rule 21 (statement)
